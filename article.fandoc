
SDK Explained

What is the AR Drone?
*********************

The Parrot A.R. Drone

Augmented Reality

What is the SDK?
****************

You

`http://developer.parrot.com/docs/SDK2/ARDrone_SDK_2_0_1.zip` (61.1 MB)

This article does not serve to re-hash the Developer Guide, but rather fill out the gaps and address the inconsistencies. So for that, it assumes the reader already has an basic understanding of the SDK.


Commands
********

Don't separate with '\n', just concatonate them together!



Config Acks

Config keys must be lower case!

Config ids (app, session, user) MUST be an 8 digit hex number
You, the user, has to create and set these IDs, I use an Adler 32 CRC for each


Emergency Landing
*****************
The SDK speaks of an *Emergency Mode* but doesn't fully explain it.

When the drone enters *Emergency Mode*, all motors are turned off and the drone refuses to honour any further commands until the emergency is resolved. This effectivily drops the drone out of the sky like a brick, ensuring a pretty heavy crash landing. Or as the developer guide elegantly puts it:

> Engines are cut-off no matter the drone state. (ie. the drone crashes, potentially violently)

This obviously isn't good for the drone, but it may prevent it from sailing uncontrollably out to sea, or over the tree line, or into someone's face!

If you look at the 'StateMask' flags in the NavData you'll see there are 2 emergency flags:

 - 'userEmergencyLanding' - bit 16
 - 'emergencyLanding' - bit 31

Or as detailed in 'ARDrone_SDK_2_0_1/ARDroneLib/Soft/Common/config.h'
pre>
Define masks for ARDrone state
31                                                             0
 x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x -> state
 |                             |
 |                             User Emergency Landing : (1) User EL is ON, (0) User EL is OFF
 |
 Emergency landing : (0) no emergency, (1) emergency
<pre



Drone Emergency
===============
The drone can set and clear the 'Emergency Landing' flag itself. When connected to the drone, you can see this in action simply by turning the drone upside down.

When upside down the drone sets the 'emergencyLanding' flag and all the LEDs turn red.

If you then right the drone, the 'emergencyLanding' flag is cleared and all LEDs turn back to green.



User Emergency
==============
The developer guide says you can set the 'Emergency Landing' flag yourself by sending an emergency REF command.

All REF commands must have bits 18, 20, 22, 24, & 28 set to 1. The emergency REF command also has bit 8 set to 1. What the guide doesn't tell you is that for it to work consistently everytime, you must first send a *land* REF command! (Preferably in the same UDP packet.)

  AT*REF=xxx,290717696   // land command
  AT*REF=xxx,290717952   // emergency command

When you initiate an emergency landing, both the 'userEmergencyLanding' and the 'emergencyLanding' flags are set.

  userEmergencyLanding........false --> true
  emergencyLanding............false --> true

Allowing you to distinquish between a drone and a user emergency.



Clearing Emergency Flags
========================
Confusingly, the command to clear an emergecy is the same command as the one that initiates a user emergency! So just make sure you don't try to initiate an emergency when the emergency flag is set, or cancel an emergency when the flag is already clear.

When an emergency is cancelled, both the 'userEmergencyLanding' and the 'emergencyLanding' flags are cleared.


